{
  "version": 3,
  "sources": ["../packages/react-dom/src/index.ts", "../packages/react-reconciler/src/ReactWorkTags.ts", "../packages/react-reconciler/src/ReactFiber.old.ts", "../packages/shared/src/assign.ts", "../packages/react-reconciler/src/ReactUpdateQueue.ts", "../packages/react-reconciler/src/ReactFiberRoot.old.ts", "../packages/scheduler/src/SchedulerPriorities.ts", "../packages/react-reconciler/src/ReactChildFiber.ts", "../packages/react-reconciler/src/ReactFiberBeginWork.ts", "../packages/react-reconciler/src/ReactFiberCommitWork.ts", "../packages/scheduler/src/SchedulerMinHeap.ts", "../packages/scheduler/src/forks/Scheduler.ts", "../packages/react-reconciler/src/Scheduler.ts", "../packages/react-reconciler/src/ReactFiberWorkLoop.old.ts", "../packages/react-reconciler/src/ReactFiberReconciler.old.ts", "../packages/react-reconciler/src/ReactFiberReconciler.ts", "../packages/react-reconciler/src/ReactRootTags.ts", "../packages/react-dom/src/client/ReactDOMRoot.ts", "../packages/react-dom/src/client/ReactDOM.ts"],
  "sourcesContent": ["/*\n * @Author: Zhouqi\n * @Date: 2022-05-16 20:02:11\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-16 20:02:11\n */\nexport { createRoot } from \"./client/ReactDOM\";\n", "/*\n * @Author: Zhouqi\n * @Date: 2022-05-16 21:39:57\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-17 20:24:14\n */\n// \u5F53\u524D\u5E94\u7528\u7684\u6839\u8282\u70B9\nexport const HostRoot = 3;\n", "/*\n * @Author: Zhouqi\n * @Date: 2022-05-16 21:41:18\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-26 17:10:13\n */\nimport { HostRoot } from \"./ReactWorkTags\";\n\n/**\n * @description: \u521B\u5EFA\u4E00\u4E2A\u6807\u8BB0\u4E3AHostRoot\u7684fiber\u6811\u6839\u8282\u70B9\n * @return fiber\u8282\u70B9\n */\nexport function createHostRootFiber() {\n  return createFiber(HostRoot);\n}\n\n/**\n * @description: \u521B\u5EFAfiber\u8282\u70B9\n * @param tag \u5143\u7D20\u7C7B\u578B\n * @return fiber\u8282\u70B9\n */\nfunction createFiber(tag) {\n  return new FiberNode(tag);\n}\n\n// fiber\u7C7B\nclass FiberNode {\n  // \u6307\u5411\u5E94\u7528\u8282\u70B9FiberRootNode\u7684\u6307\u9488\n  stateNode: any = null;\n  // \u6307\u5411\u7236fiberNode\u7684\u6307\u9488\n  return = null;\n  // \u6307\u5411\u5144\u5F1FfiberNode\u7684\u6307\u9488\n  sibling = null;\n  // \u6307\u5411\u5B50fiberNode\u7684\u6307\u9488\n  child = null;\n  // \u8282\u70B9\u7684\u7C7B\u578B\uFF0C\u666E\u901A\u5143\u7D20\u5C31\u662Ftag name\uFF0C\u51FD\u6570\u5F0F\u7EC4\u4EF6\u5C31\u662Ffunction\u672C\u8EAB\uFF0Cclass\u7EC4\u4EF6\u5C31\u662Fclass\n  type = null;\n  // \u540C\u7EA7fiberNode\u7684\u63D2\u5165\u4F4D\u7F6E\n  index: number = 0;\n  // current fiber tree\u548Cwork in progress fiber tree\u7684\u8FDE\u63A5\n  alternate = null;\n\n  // \u66F4\u65B0\u961F\u5217\n  updateQueue = null;\n  // Fiber\u8282\u70B9\u5728\u672C\u6B21\u66F4\u65B0\u7684state\n  memoizedState = null;\n\n  constructor(public tag) {}\n}\n\n/**\n * @description: \u521B\u5EFA\u5185\u5B58\u4E2D\u7684fiber\uFF0C\u5373\u4E3A\u5F53\u524D\u8282\u70B9\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684fiber\u8282\u70B9\u53BB\u5DE5\u4F5C\uFF08\u53CC\u7F13\u5B58\u673A\u5236\uFF09\n * @param current \u5F53\u524Dfiber\u8282\u70B9\n * @return \u5185\u5B58\u4E2D\u7684fiber\u6811\n */\nexport function createWorkInProgress(current) {\n  let workInProgress = current.alternate;\n  if (workInProgress === null) {\n    workInProgress = createFiber(current.tag);\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  }\n  workInProgress.child = current.child;\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n  \n  return workInProgress;\n}\n", "/*\n * @Author: Zhouqi\n * @Date: 2022-05-26 17:02:51\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-26 17:03:06\n */\nconst assign = Object.assign;\nexport default assign;\n", "import assign from \"packages/shared/src/assign\";\n\n/*\n * @Author: Zhouqi\n * @Date: 2022-05-26 14:43:08\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-26 17:10:33\n */\nexport const UpdateState = 0;\n\n/**\n *\n * @returns update\u7684\u60C5\u51B5\n * 1\u3001ReactDOM.render \u2014\u2014 HostRoot\n * 2\u3001this.setState \u2014\u2014 ClassComponent\n * 3\u3001this.forceUpdate \u2014\u2014 ClassComponent\n * 4\u3001useState \u2014\u2014 FunctionComponent\n * 5\u3001useReducer \u2014\u2014 FunctionComponent\n */\n\n/**\n * @description: \u521D\u59CB\u5316\u5F53\u524Dfiber\u7684updateQueue\n * @param fiber\n */\nexport function initializeUpdateQueue(fiber): void {\n  const queue = {\n    // \u672C\u6B21\u66F4\u65B0\u524D\u8BE5Fiber\u8282\u70B9\u7684state\uFF0CUpdate\u57FA\u4E8E\u8BE5state\u8BA1\u7B97\u66F4\u65B0\u540E\u7684state\n    baseState: fiber.memoizedState,\n    // \u672C\u6B21\u66F4\u65B0\u524D\u8BE5Fiber\u8282\u70B9\u5DF2\u4FDD\u5B58\u7684Update\u3002\u4EE5\u94FE\u8868\u5F62\u5F0F\u5B58\u5728\uFF0C\u94FE\u8868\u5934\u4E3AfirstBaseUpdate\uFF0C\u94FE\u8868\u5C3E\u4E3AlastBaseUpdate\u3002\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      // \u89E6\u53D1\u66F4\u65B0\u65F6\uFF0C\u4EA7\u751F\u7684Update\u4F1A\u4FDD\u5B58\u5728shared.pending\u4E2D\u5F62\u6210\u5355\u5411\u73AF\u72B6\u94FE\u8868\u3002\u5F53\u7531Update\u8BA1\u7B97state\u65F6\u8FD9\u4E2A\u73AF\u4F1A\u88AB\u526A\u5F00\u5E76\u8FDE\u63A5\u5728lastBaseUpdate\u540E\u9762\u3002\n      pending: null,\n    },\n    effects: null,\n  };\n  fiber.updateQueue = queue;\n}\n\n/**\n * @description: \u521B\u5EFAUpdate\uFF0C\u4FDD\u5B58\u66F4\u65B0\u72B6\u6001\u76F8\u5173\u5185\u5BB9\u7684\u5BF9\u8C61\n */\nexport function createUpdate() {\n  const update = {\n    payload: null, // \u66F4\u65B0\u6302\u8F7D\u7684\u6570\u636E\uFF0C\u4E0D\u540C\u7C7B\u578B\u7EC4\u4EF6\u6302\u8F7D\u7684\u6570\u636E\u4E0D\u540C\n    callback: null, // \u66F4\u65B0\u7684\u56DE\u8C03\u51FD\u6570\n    next: null, // \u4E0E\u5176\u4ED6Update\u8FDE\u63A5\u5F62\u6210\u94FE\u8868\n    tag: UpdateState, // \u66F4\u65B0\u7684\u7C7B\u578B\n  };\n  return update;\n}\n\n/**\n * @description: \u5411\u5F53\u524Dfiber\u8282\u70B9\u7684updateQueue\u4E2D\u6DFB\u52A0Update\n * @param fiber\n * @param update\n */\nexport function enqueueUpdate(fiber, update) {\n  const updateQueue = fiber.updateQueue;\n  if (updateQueue === null) return;\n  const sharedQueue = updateQueue.shared;\n  const pending = sharedQueue.pending;\n  // \u6784\u5EFA\u5FAA\u73AF\u94FE\u8868\n  if (pending === null) {\n    update.next = update;\n  }\n  // shared.pending \u4F1A\u4FDD\u8BC1\u59CB\u7EC8\u6307\u5411\u6700\u540E\u4E00\u4E2A\u63D2\u5165\u7684update\n  sharedQueue.pending = update;\n}\n\nexport function processUpdateQueue(workInProgress) {\n  const queue = workInProgress.updateQueue;\n\n  let firstBaseUpdate = queue.firstBaseUpdate;\n  let lastBaseUpdate = queue.lastBaseUpdate;\n\n  // pending\u59CB\u7EC8\u6307\u5411\u7684\u662F\u6700\u540E\u4E00\u4E2A\u6DFB\u52A0\u8FDB\u6765\u7684Update\n  let pendingQueue = queue.shared.pending;\n\n  // \u68C0\u6D4Bshared.pending\u662F\u5426\u5B58\u5728\u8FDB\u884C\u4E2D\u7684update\u5C06\u4ED6\u4EEC\u8F6C\u79FB\u5230baseQueue\n  if (pendingQueue !== null) {\n    queue.shared.pending = null;\n    const lastPendingUpdate = pendingQueue;\n    // \u83B7\u53D6\u7B2C\u4E00\u4E2AUpdate\n    const firstPendingUpdate = lastPendingUpdate.next;\n    // pendingQueye\u961F\u5217\u662F\u5FAA\u73AF\u7684\u3002\u65AD\u5F00\u7B2C\u4E00\u4E2A\u548C\u6700\u540E\u4E00\u4E2A\u4E4B\u95F4\u7684\u6307\u9488\uFF0C\u4F7F\u5176\u662F\u975E\u5FAA\u73AF\u7684\n    lastPendingUpdate.next = null;\n    // \u5C06shared.pending\u4E0A\u7684update\u63A5\u5230baseUpdate\u94FE\u8868\u4E0A\n    if (lastBaseUpdate === null) {\n      firstBaseUpdate = firstPendingUpdate;\n    } else {\n      firstBaseUpdate = lastBaseUpdate.next;\n    }\n    lastBaseUpdate = lastPendingUpdate;\n    const current = workInProgress.alternate;\n\n    // \u5982\u679Ccurrent\u4E5F\u5B58\u5728\uFF0C\u9700\u8981\u5C06current\u4E5F\u8FDB\u884C\u540C\u6837\u7684\u5904\u7406\uFF0C\u540Cfiber\u53CC\u7F13\u5B58\u76F8\u4F3C\n\n    // Fiber\u8282\u70B9\u6700\u591A\u540C\u65F6\u5B58\u5728\u4E24\u4E2AupdateQueue\uFF1A\n    // current fiber\u4FDD\u5B58\u7684updateQueue\u5373current updateQueue\n    // workInProgress fiber\u4FDD\u5B58\u7684updateQueue\u5373workInProgress updateQueue\n    // \u5728commit\u9636\u6BB5\u5B8C\u6210\u9875\u9762\u6E32\u67D3\u540E\uFF0CworkInProgress Fiber\u6811\u53D8\u4E3Acurrent Fiber\u6811\uFF0CworkInProgress Fiber\u6811\u5185Fiber\u8282\u70B9\u7684updateQueue\u5C31\u53D8\u6210current updateQueue\u3002\n    if (current !== null) {\n      const currentQueue = current.updateQueue;\n      const currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n\n      // \u5982\u679Ccurrent\u7684updateQueue\u548CworkInProgress\u7684updateQueue\u4E0D\u540C\uFF0C\u5219\u5BF9current\u4E5F\u8FDB\u884C\u540C\u6837\u7684\u5904\u7406\uFF0C\u7528\u4E8E\u7ED3\u6784\u5171\u4EAB\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\n        if (currentLastBaseUpdate === null) {\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\n        } else {\n          currentLastBaseUpdate.next = firstPendingUpdate;\n        }\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\n      }\n    }\n  }\n\n  if (firstBaseUpdate !== null) {\n    let newState = queue.baseState;\n\n    let newLastBaseUpdate = null;\n    let newFirstBaseUpdate = null;\n    let newBaseState = null;\n\n    const update = firstBaseUpdate;\n    newState = getStateFromUpdate(workInProgress, queue, update, newState);\n    // TODO \u591A\u4E2Aupdate\u7684\u60C5\u51B5 \u5FAA\u73AF\u5904\u7406\n    if (newLastBaseUpdate === null) {\n      newBaseState = newState;\n    }\n    queue.baseState = newBaseState;\n    queue.firstBaseUpdate = newFirstBaseUpdate;\n    queue.lastBaseUpdate = newLastBaseUpdate;\n    workInProgress.memoizedState = newState;\n  }\n}\n\nfunction getStateFromUpdate(workInProgress, queue, update, prevState) {\n  switch (update.tag) {\n    case UpdateState:\n      const payload = update.payload;\n      let partialState = payload;\n      if (partialState == null) {\n        // \u4E0D\u9700\u8981\u66F4\u65B0\n        return prevState;\n      }\n      return assign({}, prevState, payload);\n  }\n}\n", "/*\n * @Author: Zhouqi\n * @Date: 2022-05-16 21:20:49\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-26 15:42:59\n */\nimport { createHostRootFiber } from \"./ReactFiber.old\";\nimport { initializeUpdateQueue } from \"./ReactUpdateQueue\";\n\nexport function createFiberRoot(containerInfo, tag, initialChildren = null) {\n  // 1\u3001\u521B\u5EFA\u6574\u4E2AReact\u5E94\u7528\u7684FiberRootNode\uFF0C\u8FD9\u4E2AFiberRootNode\u662F\u4E00\u4E2A\u7BA1\u7406\u8005\u7684\u4F5C\u7528\n  // 2\u3001\u4E00\u4E2AReact\u5E94\u7528\u53EA\u80FD\u6709\u4E00\u4E2AFiberRootNode\n  // 3\u3001\u4E00\u4E2AFiberRootNode\u4E0B\u53EF\u4EE5\u6709\u591A\u4E2ARootFiber\n  const root = new FiberRootNode(containerInfo, tag);\n  // 1\u3001\u521B\u5EFA\u672A\u521D\u59CB\u5316\u7684\u7684RootFiber\n  // 2\u3001\u901A\u8FC7\u8C03\u7528ReactDOM.render\u6E32\u67D3\u51FA\u6765\u7684\uFF0C\u6BD4\u5982ReactDOM.render(<App />,xxxx)\uFF0C\u5176\u4E2DApp\u5C31\u662F\u4E00\u4E2ARootFiber\n  const uninitializedFiber: any = createHostRootFiber();\n  // \u5C06FiberRootNode\u7684current\u6307\u5411\u8FD9\u4E2A\u672A\u521D\u59CB\u5316\u7684RootFiber\n  root.current = uninitializedFiber;\n  // \u5F53\u524D\u5E94\u7528\uFF08App\uFF09\u7684stateNode\u6307\u5411FiberRootNode\n  uninitializedFiber.stateNode = root;\n  const initialState = {\n    element: initialChildren,\n  };\n  uninitializedFiber.memoizedState = initialState;\n  initializeUpdateQueue(uninitializedFiber);\n  return root;\n}\n\nclass FiberRootNode {\n  // \u6307\u5411\u5F53\u524D\u7684RootFiber\u5E94\u7528\n  current: any = null;\n  finishedWork = null;\n\n  constructor(public containerInfo, public tag) {}\n}\n", "/*\n * @Author: Zhouqi\n * @Date: 2022-05-19 13:41:21\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-19 13:45:37\n */\nexport const ImmediatePriority = 1; // \u9700\u8981\u7ACB\u5373\u6267\u884C\nexport const UserBlockingPriority = 2; // 250ms \u8D85\u65F6\u65F6\u95F4250ms\uFF0C\u4E00\u822C\u6307\u7684\u662F\u7528\u6237\u4EA4\u4E92\nexport const NormalPriority = 3; // 5000ms \u8D85\u65F6\u65F6\u95F45s\uFF0C\u4E0D\u9700\u8981\u76F4\u89C2\u7ACB\u5373\u53D8\u5316\u7684\u4EFB\u52A1\uFF0C\u6BD4\u5982\u7F51\u7EDC\u8BF7\u6C42\nexport const LowPriority = 4; // 10000ms \u8D85\u65F6\u65F6\u95F410s\uFF0C\u80AF\u5B9A\u8981\u6267\u884C\u7684\u4EFB\u52A1\uFF0C\u4F46\u662F\u53EF\u4EE5\u653E\u5728\u6700\u540E\u5904\u7406\nexport const IdlePriority = 5; // \u4E00\u4E9B\u6CA1\u6709\u5FC5\u8981\u7684\u4EFB\u52A1\uFF0C\u53EF\u80FD\u4E0D\u4F1A\u6267\u884C\n", "/*\n * @Author: Zhouqi\n * @Date: 2022-05-26 17:20:37\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-26 17:21:38\n */\n/**\n * @description: \u534F\u8C03\u5B50fiber\u8282\u70B9\n */\nexport function reconcileChildFibers(returnFiber, currentFirstChild, newChild) {\n  console.log(returnFiber, currentFirstChild, newChild);\n}\n", "/*\n * @Author: Zhouqi\n * @Date: 2022-05-25 21:10:35\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-26 17:21:03\n */\nimport { reconcileChildFibers } from \"./ReactChildFiber\";\nimport { processUpdateQueue } from \"./ReactUpdateQueue\";\nimport { HostRoot } from \"./ReactWorkTags\";\n\nexport function beginWork(current, workInProgress) {\n  // \u9996\u5C4F\u6E32\u67D3\u53EA\u6709hostRoot\u5B58\u5728current\u8282\u70B9\uFF0C\u5176\u4ED6\u8282\u70B9\u8FD8\u672A\u88AB\u521B\u5EFA\n  // hostRoot\u7684workInPgress\u6811\u4E2D\u7684HostRoot\u662F\u5728prepareFreshStack\u51FD\u6570\u4E2D\u521B\u5EFA\n  if (current !== null) {\n    // update\u9636\u6BB5\uFF0C\u53EF\u4EE5\u590D\u7528current\uFF08\u5373\u65E7\u7684fiber\u8282\u70B9\uFF09\n  } else {\n    // mount\u9636\u6BB5\n  }\n  switch (workInProgress.tag) {\n    case HostRoot: {\n      return updateHostRoot(current, workInProgress);\n    }\n  }\n}\n\nfunction updateHostRoot(current, workInProgress) {\n  const prevState = workInProgress.memoizedState;\n  const prevChildren = prevState.element;\n  processUpdateQueue(workInProgress);\n\n  const nextState = workInProgress.memoizedState;\n  // \u83B7\u53D6\u8981\u66F4\u65B0\u7684jsx\u5143\u7D20\n  const nextChildren = nextState.element;\n\n  // \u65B0\u65E7jsx\u5BF9\u8C61\u6CA1\u53D8\uFF0C\u76F4\u63A5\u8FD4\u56DE\n  if (nextChildren === prevChildren) {\n    return null;\n  }\n\n  // \u521B\u5EFA\u5B50fiber\u8282\u70B9\n  reconcileChildren(current, workInProgress, nextChildren);\n\n  // \u8FD4\u56DE\u5B50fiber\u8282\u70B9\n  return workInProgress.child;\n}\n\n/**\n * @description: \u5904\u7406\u5B50fiber\u8282\u70B9\n */\nfunction reconcileChildren(current, workInProgress, nextChildren) {\n  if (current === null) {\n  } else {\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      current.child,\n      nextChildren\n    );\n  }\n}\n", "import { HostRoot } from \"./ReactWorkTags\";\n\n/*\n * @Author: Zhouqi\n * @Date: 2022-05-19 21:24:22\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-26 15:17:28\n */\nexport function commitMutationEffects(root, finishedWork) {\n  commitMutationEffectsOnFiber(finishedWork, root);\n}\n\nfunction commitMutationEffectsOnFiber(finishedWork, root) {\n  const current = finishedWork.alternate;\n  switch (finishedWork.tag) {\n    case HostRoot:\n      commitReconciliationEffects(finishedWork);\n  }\n}\n\nfunction commitReconciliationEffects(finishedWork) {\n  // console.log(finishedWork);\n}\n", "/*\n * @Author: Zhouqi\n * @Date: 2022-05-19 14:08:33\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-22 20:26:26\n */\n// \u5F80\u961F\u5217\u4E2D\u6DFB\u52A0\u4EFB\u52A1\nexport function push(heap, task) {\n  const index = heap.length;\n  heap.push(task);\n  // \u961F\u5217\u4EFB\u52A1\u6392\u5E8F\uFF08\u5C0F\u9876\u5806\uFF09\n  siftUp(heap, task, index);\n}\n\n// \u83B7\u53D6\u961F\u9996\u4EFB\u52A1\uFF0C\u5373\u9AD8\u4F18\u5148\u7EA7\u4EFB\u52A1\nexport function peek(heap) {\n  return heap.length ? heap[0] : null;\n}\n\n// \u5F39\u51FA\u961F\u9996\u4EFB\u52A1\nexport function pop(heap) {\n  if (heap.length === 0) {\n    return null;\n  }\n  const first = heap[0];\n  const last = heap.pop();\n  // \u5B58\u5728\u591A\u4E2A\u4EFB\u52A1\uFF0C\u901A\u8FC7\u5806\u6392\u5E8F\u8FDB\u884C\u4E0B\u6D6E\n  if (first !== last) {\n    // \u961F\u5C3E\u5143\u7D20\u653E\u5230\u961F\u9996\n    heap[0] = last;\n    // \u8FDB\u884C\u5806\u6392\u5E8F\u4E0B\u6D6E\n    siftDown(heap, last, 0);\n  }\n  // \u53EA\u6709\u4E00\u4E2A\u4EFB\u52A1\u7684\u60C5\u51B5\uFF0C\u76F4\u63A5\u8FD4\u56DE\n  return first;\n}\n\n// \u5C0F\u9876\u5806\u6784\u5EFA\uFF0C\u65B0\u6DFB\u52A0\u7684\u4EFB\u52A1\u901A\u8FC7\u5806\u6392\u5E8F\u8FDB\u884C\u4E0A\u6D6E\uFF08\u4F18\u5148\u7EA7\u961F\u5217\uFF09\nfunction siftUp(heap, task, i) {\n  let index = i;\n  // \u8FDB\u884C\u5806\u6392\u5E8F\n  while (index > 0) {\n    // \u6839\u636E\u5B8C\u5168\u4E8C\u53C9\u6811\u7684\u6027\u8D28\uFF0C\u5F53\u524D\u5982\u679C\u5F53\u524D\u8282\u70B9\u7D22\u5F15\u4E3Ai\uFF0C\u5219\u5B83\u7684\u5DE6\u5B69\u5B50\u7684\u7D22\u5F15\u4E3A2i+1\uFF0C\u53F3\u5B69\u5B50\u7684\u7D22\u5F15\u4E3A2i+2\n    // \u5982\u679C\u5F53\u524D\u5B50\u8282\u70B9\u7684\u7D22\u5F15\u4E3Ai\uFF0C\u5219\u53EF\u63A8\u51FA\u7236\u8282\u70B9\u7D22\u5F15\u4E3A(i-1)/2\n    const parentIndex = (index - 1) >> 1;\n    const parentTask = heap[parentIndex];\n    // \u5982\u679C\u7236\u4EFB\u52A1\u7684\u4F18\u5148\u7EA7\u4F4E\u4E8E\u5F53\u524D\u4EFB\u52A1\uFF0C\u5219\u5BF9\u7236\u5B50\u8FDB\u884C\u8C03\u6362\n    if (compare(parentTask, task) > 0) {\n      heap[parentIndex] = task;\n      heap[index] = parentIndex;\n      index = parentIndex;\n    } else {\n      return;\n    }\n  }\n}\n\nfunction siftDown(queue, task, i) {}\n\n// \u6BD4\u8F83\u4EFB\u52A1\u7684\u5148\u540E\uFF0C\u5148\u6839\u636EsortIndex\u6392\u5E8F\uFF0C\u5982\u679C\u4E00\u6837\u5C31\u6839\u636Eid\u6392\u5E8F\nfunction compare(a, b) {\n  const diff = a.sortIndex - b.sortIndex;\n  return diff !== 0 ? diff : a.id - b.id;\n}\n", "/*\n * @Author: Zhouqi\n * @Date: 2022-05-19 12:00:55\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-22 20:48:58\n */\nimport { peek, pop, push } from \"../SchedulerMinHeap\";\nimport {\n  ImmediatePriority,\n  UserBlockingPriority,\n  IdlePriority,\n  LowPriority,\n  NormalPriority,\n} from \"../SchedulerPriorities\";\n\nlet getCurrentTime;\n// \u662F\u5426\u53EF\u4F7F\u7528performace.now\u53BB\u83B7\u53D6\u9AD8\u7CBE\u5EA6\u65F6\u95F4\nconst hasPerformanceNow =\n  typeof performance === \"object\" && typeof performance.now === \"function\";\n\nif (hasPerformanceNow) {\n  getCurrentTime = () => performance.now();\n} else {\n  // TODO \u901A\u8FC7 Date.now\u53BB\u83B7\u53D6\u65F6\u95F4\n}\n\nconst IMMEDIATE_PRIORITY_TIMEOUT = -1; // \u9700\u8981\u7ACB\u5373\u6267\u884C\nconst USER_BLOCKING_PRIORITY_TIMEOUT = 250; // 250ms \u8D85\u65F6\u65F6\u95F4250ms\uFF0C\u4E00\u822C\u6307\u7684\u662F\u7528\u6237\u4EA4\u4E92\nconst NORMAL_PRIORITY_TIMEOUT = 5000; // 5000ms \u8D85\u65F6\u65F6\u95F45s\uFF0C\u4E0D\u9700\u8981\u76F4\u89C2\u7ACB\u5373\u53D8\u5316\u7684\u4EFB\u52A1\uFF0C\u6BD4\u5982\u7F51\u7EDC\u8BF7\u6C42\nconst LOW_PRIORITY_TIMEOUT = 10000; // 10000ms \u8D85\u65F6\u65F6\u95F410s\uFF0C\u80AF\u5B9A\u8981\u6267\u884C\u7684\u4EFB\u52A1\uFF0C\u4F46\u662F\u53EF\u4EE5\u653E\u5728\u6700\u540E\u5904\u7406\nconst IDLE_PRIORITY_TIMEOUT = 1073741823; // \u4E00\u4E9B\u6CA1\u6709\u5FC5\u8981\u7684\u4EFB\u52A1\uFF0C\u53EF\u80FD\u4E0D\u4F1A\u6267\u884C\n\n// \u8FC7\u671F\u4EFB\u52A1\u961F\u5217\nconst taskQueue = [];\n// \u4EFB\u52A1id\nlet taskIdCounter = 1;\n// \u6807\u8BB0\u662F\u5426\u6B63\u5728\u8FDB\u884C\u4EFB\u52A1\u5904\u7406\uFF0C\u9632\u6B62\u4EFB\u52A1\u518D\u6B21\u8FDB\u5165\nlet isPerformingWork = false;\n// \u662F\u5426\u6709\u4EFB\u52A1\u5728\u8C03\u5EA6\nlet isHostCallbackScheduled = false;\nlet scheduledHostCallback: null | Function = null;\n\n// postMessage\u53D1\u9001\u7684\u6D88\u606F\u662F\u5426\u6B63\u5728\u6267\u884C\nlet isMessageLoopRunning = false;\n\n/**\n * @description: \u8C03\u5EA6\u4EFB\u52A1\n * @param priorityLevel \u4F18\u5148\u7EA7\n * @param callback \u9700\u8981\u8C03\u5EA6\u7684\u56DE\u8C03\n */\nfunction unstable_scheduleCallback(priorityLevel, callback) {\n  // \u83B7\u53D6\u4EFB\u52A1\u5F53\u524D\u65F6\u95F4\n  const currentTime = getCurrentTime();\n  const startTime = currentTime;\n\n  // 1\u3001\u6839\u636E\u4F18\u5148\u7EA7\u8BA1\u7B97\u8D85\u65F6\u65F6\u95F4\n  let timeout;\n  switch (priorityLevel) {\n    case ImmediatePriority:\n      timeout = IMMEDIATE_PRIORITY_TIMEOUT;\n      break;\n    case UserBlockingPriority:\n      timeout = USER_BLOCKING_PRIORITY_TIMEOUT;\n      break;\n    case IdlePriority:\n      timeout = IDLE_PRIORITY_TIMEOUT;\n      break;\n    case LowPriority:\n      timeout = LOW_PRIORITY_TIMEOUT;\n      break;\n    case NormalPriority:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n      break;\n    default:\n      timeout = NORMAL_PRIORITY_TIMEOUT;\n  }\n\n  // 2\u3001\u8BA1\u7B97\u8FC7\u671F\u65F6\u95F4\n  const expirationTime = startTime + timeout;\n  // 3\u3001\u521B\u5EFA\u4E00\u4E2A\u65B0\u4EFB\u52A1\n  const newTask = {\n    id: taskIdCounter++,\n    callback,\n    priorityLevel,\n    startTime,\n    expirationTime,\n    sortIndex: -1, // \u4EFB\u52A1\u6392\u5E8F\u5E8F\u53F7\uFF0C\u521D\u59CB\u5316-1\n  };\n\n  // TODO \u5982\u679C\u4EFB\u52A1\u5F00\u59CB\u65F6\u95F4\u5927\u4E8E\u5F53\u524D\u65F6\u95F4\uFF0C\u8BF4\u660E\u4EFB\u52A1\u6CA1\u6709\u8FC7\u671F\n  if (startTime > currentTime) {\n  } else {\n    // \u4EFB\u52A1\u5F00\u59CB\u65F6\u95F4<=\u5F53\u524D\u65F6\u95F4\uFF0C\u8BF4\u660E\u4EFB\u52A1\u8FC7\u671F\u4E86\uFF0C\u9700\u8981\u6DFB\u52A0\u5230taskQueue\u961F\u5217\u4E2D\u4EE5\u8FDB\u884C\u4EFB\u52A1\u8C03\u5EA6\n    // \u8FC7\u671F\u4EFB\u52A1\u6839\u636E\u8FC7\u671F\u65F6\u95F4\u8FDB\u884C\u6392\u5E8F\n    newTask.sortIndex = expirationTime;\n    push(taskQueue, newTask);\n    // \u5982\u679C\u6CA1\u6709\u5904\u4E8E\u8C03\u5EA6\u4E2D\u7684\u4EFB\u52A1\uFF0C\u5E76\u4E14workLoop\u6CA1\u6709\u5728\u6267\u884C\u4E2D\uFF0C\u5219\u5411\u6D4F\u89C8\u5668\u7533\u8BF7\u65F6\u95F4\u7247\uFF08\u4E00\u5E27\uFF09\uFF0C\u6D4F\u89C8\u5668\u7A7A\u95F2\u7684\u65F6\u5019\u6267\u884CworkLoop\n    if (!isHostCallbackScheduled && !isPerformingWork) {\n      isHostCallbackScheduled = true;\n      requestHostCallback(flushWork);\n    }\n  }\n}\n\n/**\n * @description: \u6CE8\u518C\u5B8F\u4EFB\u52A1\n * @param callback\n */\nfunction requestHostCallback(callback) {\n  scheduledHostCallback = callback;\n  if (!isMessageLoopRunning) {\n    isMessageLoopRunning = true;\n    schedulePerformWorkUntilDeadline();\n  }\n}\n\n// \u7A7A\u95F2\u65F6\u95F4\u8FDB\u884C\u4EFB\u52A1\u8C03\u5EA6\u903B\u8F91\nlet schedulePerformWorkUntilDeadline;\n// \u5229\u7528messageChannel\u6A21\u62DF\u5B9E\u73B0requestIdleCallback\n// \u6A21\u62DF\u5B9E\u73B0requestIdleCallback\u7684\u4E24\u4E2A\u6761\u4EF6\n// 1 \u6A21\u62DF\u5B9E\u73B0\u7684requestIdleCallback\u80FD\u591F\u4E3B\u52A8\u8BA9\u51FA\u7EBF\u7A0B\uFF0C\u8BA9\u6D4F\u89C8\u5668\u53BB\u4E00\u4E9B\u4E8B\u60C5\uFF0C\u4F8B\u5982\u6E32\u67D3\n// 2 \u4E00\u6B21\u4E8B\u4EF6\u5FAA\u73AF\u4E2D\u53EA\u6267\u884C\u4E00\u6B21\uFF0C\u56E0\u4E3A\u6267\u884C\u5B8C\u4E00\u6B21\u8C03\u5EA6\u4EFB\u52A1\u540E\u8FD8\u4F1A\u53BB\u7533\u8BF7\u4E0B\u4E00\u4E2A\u65F6\u95F4\u7247\n// \u6EE1\u8DB3\u4E0A\u8FF0\u6761\u4EF6\u7684\u53EA\u6709\u5B8F\u4EFB\u52A1\uFF0C\u56E0\u4E3A\u5B8F\u4EFB\u52A1\u662F\u5728\u4E0B\u4E00\u6B21\u4E8B\u4EF6\u5FAA\u73AF\u5F00\u59CB\u7684\u65F6\u5019\u6267\u884C\uFF0C\u5E76\u4E0D\u4F1A\u963B\u585E\u672C\u6B21\u66F4\u65B0\uFF0C\u5E76\u4E14\u5B8F\u4EFB\u52A1\u5728\u4E00\u6B21\u4E8B\u4EF6\u5FAA\u73AF\u4E2D\u4E5F\u53EA\u9006\u884C\u4E00\u6B21\u3002\n\n// node\u73AF\u5883\u4E0B\u4F7F\u7528setImmediate\n// \u6D4F\u89C8\u5668\u548Cweb worker\u73AF\u5883\u4E0B\uFF0C\u8FD9\u91CC\u4E0D\u7528setTimeout\u7684\u539F\u56E0\u662F\u9012\u5F52\u8C03\u7528\u7684\u65F6\u5019\uFF0C\u5EF6\u8FDF\u6700\u5C0F\u662F4ms\nif (typeof MessageChannel !== \"undefined\") {\n  const channel = new MessageChannel();\n  const port = channel.port2;\n  // message\u56DE\u8C03\u662F\u5B8F\u4EFB\u52A1\uFF0C\u5728\u4E0B\u4E00\u4E2A\u4E8B\u4EF6\u5FAA\u73AF\u4E2D\u6267\u884C\u8FD9\u4E2A\u56DE\u8C03\n  channel.port1.onmessage = performWorkUntilDeadline;\n  schedulePerformWorkUntilDeadline = () => {\n    port.postMessage(null);\n  };\n} else {\n  // \u4F7F\u7528setTimeout\n}\n\nfunction flushWork() {\n  isHostCallbackScheduled = false;\n  isPerformingWork = true;\n  return workLoop();\n}\n\nfunction performWorkUntilDeadline() {\n  if (scheduledHostCallback !== null) {\n    let hasMoreWork = true;\n\n    try {\n      // \u6267\u884CflushWork\n      hasMoreWork = scheduledHostCallback();\n    } finally {\n      // TODO \u5982\u679C\u961F\u5217\u4E2D\u8FD8\u6709\u4EFB\u52A1\uFF0C\u5219\u7EE7\u7EED\u4E3A\u5176\u521B\u5EFA\u4E00\u4E2A\u5B8F\u4EFB\u52A1\u4EE5\u7EE7\u7EED\u6267\u884C\n      if (hasMoreWork) {\n      } else {\n        isMessageLoopRunning = false;\n        scheduledHostCallback = null;\n      }\n    }\n  } else {\n    isMessageLoopRunning = false;\n  }\n}\n\nfunction workLoop() {\n  // \u53D6\u51FA\u5F53\u524D\u4F18\u5148\u7EA7\u6700\u9AD8\u7684\u4EFB\u52A1\n  let currentTask = peek(taskQueue);\n  while (currentTask !== null) {\n    // \u83B7\u53D6\u771F\u6B63\u7684\u66F4\u65B0\u51FD\u6570\n    const callback = currentTask.callback;\n    if (typeof callback === \"function\") {\n      currentTask.callback = null;\n      callback();\n      if (currentTask === peek(taskQueue)) {\n        // \u5F39\u51FA\u5F53\u524D\u6267\u884C\u7684\u4EFB\u52A1\n        pop(taskQueue);\n      }\n    }\n    // \u53D6\u51FA\u4E0B\u4E00\u4E2A\u4EFB\u52A1\u6267\u884C\n    currentTask = peek(taskQueue);\n  }\n}\n\nexport { unstable_scheduleCallback };\n", "/*\n * @Author: Zhouqi\n * @Date: 2022-05-19 11:58:34\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-19 12:02:06\n */\nimport * as Scheduler from 'packages/scheduler/src/forks/Scheduler';\n\nexport const scheduleCallback = Scheduler.unstable_scheduleCallback;\n", "/*\n * @Author: Zhouqi\n * @Date: 2022-05-18 11:29:27\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-25 21:20:21\n */\nimport { NormalPriority } from \"packages/scheduler/src/SchedulerPriorities\";\nimport { createWorkInProgress } from \"./ReactFiber.old\";\nimport { beginWork } from \"./ReactFiberBeginWork\";\nimport { commitMutationEffects } from \"./ReactFiberCommitWork\";\nimport { scheduleCallback } from \"./Scheduler\";\n\nlet workInProgressRoot = null;\nlet workInProgress = null;\n\n/**\n * @description: \u8C03\u5EA6fiber\u8282\u70B9\u4E0A\u7684\u66F4\u65B0\n * @param fiber\n */\nexport function scheduleUpdateOnFiber(fiber) {\n  const root = fiber.stateNode;\n  // \u8C03\u5EA6\u5E94\u7528\n  ensureRootIsScheduled(root);\n}\n\n/**\n * @author: Zhouqi\n * @description: \u8C03\u5EA6\u5E94\u7528\n * @param root\n */\nfunction ensureRootIsScheduled(root) {\n  // \u8C03\u5EA6\u4E00\u4E2A\u65B0\u7684\u56DE\u8C03\n  let newCallbackNode;\n\n  // \u8BBE\u7F6E\u4EFB\u52A1\u4F18\u5148\u7EA7\uFF0C\u9632\u6B62\u6D4F\u89C8\u5668\u56E0\u6CA1\u6709\u7A7A\u95F2\u65F6\u95F4\u5BFC\u81F4\u4EFB\u52A1\u5361\u6B7B\n  // \u5148\u5199\u6B7BNormalPriority\n  let schedulerPriorityLevel = NormalPriority;\n  // TODO \u8BA1\u7B97\u4EFB\u52A1\u8D85\u65F6\u7B49\u7EA7\n\n  // \u4F4E\u4F18\u5148\u7EA7\u7684\u5F02\u6B65\u66F4\u65B0\u4EFB\u52A1\u8D70performConcurrentWorkOnRoot\n  // performConcurrentWorkOnRoot\u5728\u6D4F\u89C8\u5668\u6CA1\u6709\u7A7A\u95F2\u65F6\u95F4\u7684\u65F6\u5019\u6211\u6267\u884CshouldYield\u7EC8\u6B62\u5FAA\u73AF\n  // \u7B49\u6D4F\u89C8\u5668\u6709\u7A7A\u95F2\u65F6\u95F4\u7684\u65F6\u5019\u6062\u590D\u6267\u884C\n\n  // \u901A\u8FC7scheduler\u53BB\u8C03\u5EA6\u4EFB\u52A1\n  newCallbackNode = scheduleCallback(\n    schedulerPriorityLevel,\n    performConcurrentWorkOnRoot.bind(null, root)\n  );\n  root.callbackNode = newCallbackNode;\n}\n\n/**\n * @description: \u6240\u6709\u5E76\u53D1\u4EFB\u52A1\u7684\u5165\u53E3\uFF0C\u5373\u901A\u8FC7schedular\u8C03\u5EA6\u7684\u4EFB\u52A1\n * @param root\n */\nfunction performConcurrentWorkOnRoot(root) {\n  renderRootSync(root);\n  const finishedWork = root.current.alternate;\n  root.finishedWork = finishedWork;\n  finishConcurrentRender(root);\n}\n\n/**\n * @description: \u540C\u6B65\u6267\u884C\u6839\u8282\u70B9\u6E32\u67D3\n * @param root\n */\nfunction renderRootSync(root) {\n  if (workInProgressRoot !== root) {\n    // \u4E3A\u63A5\u4E0B\u53BB\u65B0\u4E00\u6B21\u6E32\u67D3\u5DE5\u4F5C\u521D\u59CB\u5316\u53C2\u6570\n    prepareFreshStack(root);\n  }\n  workLoopSync();\n  // \u8868\u793Arender\u7ED3\u675F\uFF0C\u6CA1\u6709\u6B63\u5728\u8FDB\u884C\u4E2D\u7684render\n  workInProgressRoot = null;\n}\n\n/**\n * @description: \u4E3A\u63A5\u4E0B\u53BB\u65B0\u4E00\u6B21\u6E32\u67D3\u5DE5\u4F5C\u521D\u59CB\u5316\u53C2\u6570\n * @param root\n */\nfunction prepareFreshStack(root) {\n  root.finishedWork = null;\n  workInProgressRoot = root;\n  // \u4E3A\u5F53\u524D\u8282\u70B9\u521B\u5EFA\u4E00\u4E2A\u5185\u5B58\u4E2D\u7684fiber\u8282\u70B9\uFF08\u53CC\u7F13\u5B58\u673A\u5236\uFF09\n  const rootWorkInProgress = createWorkInProgress(root.current);\n  workInProgress = rootWorkInProgress;\n  return workInProgressRoot;\n}\n\nfunction finishConcurrentRender(root) {\n  commitRoot(root);\n}\n\nfunction commitRoot(root) {\n  commitRootImpl(root);\n}\n\nfunction commitRootImpl(root) {\n  let finishedWork = root.finishedWork;\n  root.finishedWork = null;\n  root.callbackNode = null;\n  commitMutationEffects(root, finishedWork);\n}\n\n/**\n * @description: \u5FAA\u73AF\u540C\u6B65\u6267\u884C\u4EFB\u52A1\n */\nfunction workLoopSync() {\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n    // TODO \u6682\u65F6\u91CD\u7F6EworkInProgress\u4EE5\u9000\u51FA\u5FAA\u73AF\uFF0C\u9632\u6B62\u8C03\u8BD5\u5361\u6B7B\n    workInProgress = null;\n  }\n}\n\n/**\n * @description: \u4EE5fiber\u8282\u70B9\u4E3A\u5355\u4F4D\u5F00\u59CBbeginWork\u548CcompleteWork\n * @param unitOfWork\n */\nfunction performUnitOfWork(unitOfWork) {\n  // \u9996\u5C4F\u6E32\u67D3\u53EA\u6709\u5F53\u524D\u5E94\u7528\u7684\u6839\u7ED3\u70B9\u5B58\u5728current\uFF0C\u5176\u5B83\u8282\u70B9current\u4E3Anull\n  const current = unitOfWork.alternate;\n  let next: any = null;\n  next = beginWork(current, unitOfWork);\n}\n", "/*\n * @Author: Zhouqi\n * @Date: 2022-05-16 20:46:52\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-26 15:44:43\n */\nimport { createFiberRoot } from \"./ReactFiberRoot.old\";\nimport { scheduleUpdateOnFiber } from \"./ReactFiberWorkLoop.old\";\nimport { createUpdate, enqueueUpdate } from \"./ReactUpdateQueue\";\n\n/**\n * @description: \u521B\u5EFA\u6574\u4E2A\u5E94\u7528\u7684\u6839\u8282\u70B9\n * @param  containerInfo \u6302\u8F7D\u7684dom\u8282\u70B9\n * @param  tag \u521B\u5EFA\u9ED8\u8BA4 concurrent\n * @return \u6574\u4E2A\u5E94\u7528\u7684\u6839\u7ED3\u70B9\n */\nexport function createContainer(containerInfo, tag) {\n  return createFiberRoot(containerInfo, tag);\n}\n\n/**\n * @description: \u66F4\u65B0\n * @param element ReactDOM.render\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\n * @param container\n */\nexport function updateContainer(element, container) {\n  const current = container.current;\n  // \u521B\u5EFA\u66F4\u65B0\uFF0C\u76EE\u524D\u53EA\u6709hostRoot\u4F7F\u7528\n  const update: any = createUpdate();\n  // \u5C06update\u7684payload\u505A\u4E3A\u9700\u8981\u6302\u8F7D\u5728\u6839\u8282\u70B9\u7684\u7EC4\u4EF6\n  update.payload = { element };\n  enqueueUpdate(current, update);\n  // \u8C03\u5EA6\u8BE5fiber\u8282\u70B9\u7684\u66F4\u65B0\n  const root = scheduleUpdateOnFiber(current);\n}\n", "/*\n * @Author: Zhouqi\n * @Date: 2022-05-16 20:44:38\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-16 20:48:34\n */\nimport { createContainer as createContainer_old } from \"./ReactFiberReconciler.old\";\n\nexport const createContainer = createContainer_old;\n", "/*\n * @Author: Zhouqi\n * @Date: 2022-05-16 21:44:00\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-16 21:44:06\n */\nexport const ConcurrentRoot = 1;\n", "/*\n * @Author: Zhouqi\n * @Date: 2022-05-16 19:59:04\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-22 20:08:11\n */\nimport { createContainer } from \"packages/react-reconciler/src/ReactFiberReconciler\";\nimport { updateContainer } from \"packages/react-reconciler/src/ReactFiberReconciler.old\";\nimport { ConcurrentRoot } from \"packages/react-reconciler/src/ReactRootTags\";\n\nexport function createRoot(container) {\n  // \u521B\u5EFA\u6839\u5BB9\u5668\n  const root = createContainer(container, ConcurrentRoot);\n  return new ReactDOMRoot(root);\n}\n\nclass ReactDOMRoot {\n  public _internalRoot;\n  constructor(internalRoot) {\n    this._internalRoot = internalRoot;\n  }\n\n  // \u901A\u8FC7ReactDOM.render\u5C06jsx\u6E32\u67D3\u5230\u9875\u9762\u4E0A\n  render(children) {\n    const root = this._internalRoot;\n    updateContainer(children, root);\n  }\n}\n", "/*\n * @Author: Zhouqi\n * @Date: 2022-05-16 19:57:13\n * @LastEditors: Zhouqi\n * @LastEditTime: 2022-05-22 20:15:00\n */\nimport { createRoot as createRootImpl } from \"./ReactDOMRoot\";\n\n/**\n * @author: Zhouqi\n * @description: \u521B\u5EFA\u6574\u4E2A\u5E94\u7528\u7684\u6839\u8282\u70B9\n * @param container \u6302\u8F7D\u7684\u5BB9\u5668\n * @return \u6574\u4E2A\u5E94\u7528\u7684\u6839\u8282\u70B9\n */\nexport function createRoot(container) {\n  return createRootImpl(container);\n}\n"],
  "mappings": "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",
  "names": []
}
